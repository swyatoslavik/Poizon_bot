from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from data.config import admins_id

from google_sheets import ORDERS

from handlers.users.admins.admins_menu import menu

from keyboards.default import kb_statuses, admins_menu, kb_return, kb_select_change
from loader import dp
from states.admins import ChangeOrderStatus, ChangeOrder, ChangeOrderName, ChangeOrderCost, ChangeOrderLink, \
    ChangeOrderPhoto

from datetime import datetime


@dp.message_handler(state=ChangeOrder.order_number, user_id=admins_id)
async def get_order_info(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è":
        await state.finish()
        await menu(message)
        return
    if not ORDERS.find(answer):
        await message.answer(f"–ó–∞–∫–∞–∑ {answer} –Ω–µ –Ω–∞–π–¥–µ–Ω!", reply_markup=kb_return)
        await ChangeOrderStatus.select_order.set()
        return
    order_info = ORDERS.row_values(ORDERS.find(answer).row)
    await state.update_data(order_number=answer)
    user = await dp.bot.get_chat(order_info[1])
    text = ""
    text += (f"#{order_info[0]}\n"
             f"\t\t\t\t username:\t\t@{user.username}\n"
             f"\t\t\t\t –ù–∞–∑–≤–∞–Ω–∏–µ:\t\t{order_info[2]}\n"
             f"\t\t\t\t –°—Ç–∞—Ç—É—Å:\t\t{order_info[4]}\n"
             f"\t\t\t\t –°—Ç–æ–∏–º–æ—Å—Ç—å:\t\t{order_info[5]} —Ä—É–±\n"
             f"\t\t\t\t –°—Å—ã–ª–∫–∞:\t\t{order_info[3]}")
    await dp.bot.send_photo(message.chat.id, photo=order_info[6], caption=text, reply_markup=kb_statuses)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏—è:", reply_markup=kb_select_change)
    await ChangeOrder.type_of_change.set()


@dp.message_handler(state=ChangeOrder.type_of_change, user_id=admins_id)
async def select_type_of_change(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è":
        await state.finish()
        await menu(message)
        return
    elif answer == "üîÑ–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∑–∞–∫–∞–∑–∞:", reply_markup=kb_statuses)
        await ChangeOrderStatus.change_status.set()
    elif answer == "üí≠–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞:", reply_markup=kb_return)
        await ChangeOrderName.new_order_name.set()
    elif answer == "üí∞–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞:", reply_markup=kb_return)
        await ChangeOrderCost.new_order_cost.set()
    elif answer == "üîó–ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –∑–∞–∫–∞–∑–∞:", reply_markup=kb_return)
        await ChangeOrderLink.new_order_link.set()
    elif answer == "üì∑–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é":
        await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∑–∞–∫–∞–∑–∞:", reply_markup=kb_return)
        await ChangeOrderPhoto.new_order_photo.set()


@dp.message_handler(state=ChangeOrderName.new_order_name, user_id=admins_id)
async def change_order_name(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è":
        await state.finish()
        await menu(message)
        return

    data = await state.get_data()
    order_number = data.get("order_number")
    row_number = ORDERS.findall(order_number, in_column=1)[0].row
    ORDERS.update_cell(row_number, 3, answer)
    await state.finish()
    await change_order_final(message, order_number)


@dp.message_handler(state=ChangeOrderStatus.change_status, user_id=admins_id)
async def change_order_status(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è":
        await state.finish()
        await menu(message)
        return

    data = await state.get_data()
    order_number = data.get("order_number")
    await state.update_data(change_status=answer)
    ORDERS.update_cell(ORDERS.find(order_number).row, 5, answer)

    now = datetime.now()
    formatted_date_time = now.strftime("%d-%m-%Y %H:%M")
    old_history_of_statuses = ORDERS.cell(ORDERS.find(str(order_number)).row, 8).value
    history_of_statuses = str(old_history_of_statuses) + "\n" + str(answer) + "  " + str(formatted_date_time)
    ORDERS.update_cell(ORDERS.find(order_number).row, 8, history_of_statuses)

    await dp.bot.send_message(int(ORDERS.cell(ORDERS.find(order_number).row, 2).value),
                              f"–í–∞—à–µ–º—É –∑–∞–∫–∞–∑—É #{order_number} –ø—Ä–∏—Å–≤–æ–µ–Ω –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å - {answer}")
    price = ORDERS.cell(ORDERS.find(str(order_number)).row, 6).value
    if answer == "–æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã":
        kb = InlineKeyboardMarkup()
        button = InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É‚úÖ", callback_data=f"confirm_order_payment_{order_number}")
        kb.add(button)
        await dp.bot.send_message(int(ORDERS.cell(ORDERS.find(order_number).row, 2).value),
                                  "–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏ üá∑üá∫ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ. –û—Ç–ø—Ä–∞–≤–ª—è–µ–ºüöõ —á–µ—Ä–µ–∑ Boxberry, DPD, –ü–æ—á—Ç—É –†–æ—Å—Å–∏–∏, –°–î–≠–ö –∏–ª–∏ –ê–≤–∏—Ç–æ –î–æ—Å—Ç–∞–≤–∫—É üì¶. –°–∞–º–æ–≤—ã–≤–æ–∑ - –±–µ—Å–ø–ª–∞—Ç–Ω–æüòä\n"
                                  "–ú—ã –≤—ã–∫—É–ø–∞–µ–º —Ç–æ–≤–∞—Ä –≤ —Ç–µ—á–µ–Ω–∏–µ 12 —á–∞—Å–æ–≤‚è≥ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã. –¢–æ–≤–∞—Ä –±—É–¥–µ—Ç —É –Ω–∞—Å –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ 25 –¥–Ω–µ–π. –í—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—åüëÄ –ø–æ—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞.\n"
                                  f"–ì–æ—Ç–æ–≤—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑? –¢–æ–≥–¥–∞ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ <b>{price}</b> —Ä—É–±–ª–µ–π –Ω–∞ –ª—é–±—É—é, —É–¥–æ–±–Ω—É—é –¥–ª—è –≤–∞—Å –∫–∞—Ä—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞ (–¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ):\n"
                                  "     –¢–∏–Ω—å–∫–æ—Ñ—Ñ - <code>2200 7004 4459 5085</code> –°–≤—è—Ç–æ—Å–ª–∞–≤ –ò–ª—å–∏—á –û\n"
                                  "     –°–±–µ—Ä - <code>2202 2061 1929 4283</code> –°–≤—è—Ç–æ—Å–ª–∞–≤ –ò–ª—å–∏—á –û\n"
                                  "     –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ - <code>5559 4941 7261 0312</code> –°–≤—è—Ç–æ—Å–ª–∞–≤ –ò–ª—å–∏—á –û\n"
                                  "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µüí≥. –° –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –æ–ø–ª–∞—Ç—É –¥–∞–µ—Ç—Å—è 30 –º–∏–Ω—É—Ç‚è∞, —Ç.–∫. —Ü–µ–Ω–∞ –∑–∞ —Ç–æ–≤–∞—Ä –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è.\n"
                                  "–û–ø–ª–∞—Ç–∏—Ç–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É‚úÖ", reply_markup=kb)

    await state.finish()
    await change_order_final(message, order_number)


@dp.message_handler(state=ChangeOrderCost.new_order_cost, user_id=admins_id)
async def change_order_cost(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è":
        await state.finish()
        await menu(message)
        return

    data = await state.get_data()
    order_number = data.get("order_number")
    row_number = ORDERS.findall(order_number, in_column=1)[0].row
    ORDERS.update_cell(row_number, 6, answer)
    await state.finish()
    await change_order_final(message, order_number)


@dp.message_handler(state=ChangeOrderLink.new_order_link, user_id=admins_id)
async def change_order_link(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è":
        await state.finish()
        await menu(message)
        return

    data = await state.get_data()
    order_number = data.get("order_number")
    row_number = ORDERS.findall(order_number, in_column=1)[0].row
    ORDERS.update_cell(row_number, 4, answer)
    await state.finish()
    await change_order_final(message, order_number)


@dp.message_handler(state=ChangeOrderPhoto.new_order_photo, user_id=admins_id)
async def change_order_photo(message: types.Message, state: FSMContext):
    answer = message.text

    if answer == "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è":
        await state.finish()
        await menu(message)
        return

    data = await state.get_data()
    order_number = data.get("order_number")
    row_number = ORDERS.findall(order_number, in_column=1)[0].row
    answer = message.photo[-1].file_id
    ORDERS.update_cell(row_number, 7, answer)
    await state.finish()
    await change_order_final(message, order_number)


async def change_order_final(message: types.Message, order_number):
    await message.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.", reply_markup=admins_menu)
    order_info = ORDERS.row_values(ORDERS.find(order_number).row)
    user = await dp.bot.get_chat(order_info[1])

    text = ""
    text += (f"#{order_info[0]}\n"
             f"\t\t\t\t username:\t\t@{user.username}\n"
             f"\t\t\t\t –ù–∞–∑–≤–∞–Ω–∏–µ:\t\t{order_info[2]}\n"
             f"\t\t\t\t –°—Ç–∞—Ç—É—Å:\t\t{order_info[4]}\n"
             f"\t\t\t\t –°—Ç–æ–∏–º–æ—Å—Ç—å:\t\t{order_info[5]} —Ä—É–±\n"
             f"\t\t\t\t –°—Å—ã–ª–∫–∞:\t\t{order_info[3]}")
    await dp.bot.send_photo(message.chat.id, photo=order_info[6], caption=text, reply_markup=kb_statuses)
